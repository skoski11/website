library(Lahman)
colnames(Batting)
library(sqldf)
print("How ya doing here")
echo "This is not linux anymore"
waaaaa
"waaaaaa"
library(Lahman)
library(sqldf)
query<-"SELECT teamID, playerID, yearID, SO, AB FROM Batting
WHERE AB> 400 and SO< 10
ORDER BY SO"
query<-"SELECT teamID, playerID, yearID, SO, AB FROM Batting
WHERE AB> 400 and SO< 10
ORDER BY SO"
sqldf(query)
query<-"SELECT teamID, playerID, yearID, SO, AB FROM Batting
WHERE AB> 400 and SO< 10
ORDER BY AB DESC"
sqldf(query)
# This finds and sorts who has had the fewest strikeouts in a season with atleast 400 at bats
query<-"SELECT teamID, playerID, yearID, SO, AB FROM Batting
WHERE AB> 400 and SO< 10
ORDER BY SO"
sqldf(query)
query<-"SELECT teamID, playerID, yearID, SO, AB FROM Batting
WHERE AB>= 400 and SO< 10
ORDER BY SO"
sqldf(query)
query<-"SELECT playerID,HR FROM Batting
WHERE playerID='ruthba01'
GROUP BY playerID"
sqldf(query)
query<-"SELECT playerID,sum(HR) FROM Batting
WHERE playerID='ruthba01'
GROUP BY playerID"
sqldf(query)
query<-"SELECT playerID,sum(HR) FROM Batting
WHERE sum(HR)>= 600'
GROUP BY playerID"
sqldf(query)
query<-"SELECT playerID,sum(HR) FROM Batting
WHERE sum(HR)>= 600
GROUP BY playerID"
sqldf(query)
query<-"SELECT playerID,sum(HR) FROM Batting
WHERE sum(HR)>= 600"
sqldf(query)
#Filter before group is where, and filter after group uses having
query<-"SELECT playerID,sum(HR) FROM Batting
GROUP BY playerID
HAVING sum(HR)>= 600
ORDER BY sum(HR)"
sqldf(query)
query<-"SELECT playerID,sum(HR) FROM Batting
GROUP BY playerID
HAVING sum(HR)>= 600
ORDER BY sum(HR) DESC"
sqldf(query)
query<-"SELECT playerID,avg(HR) FROM Batting
GROUP BY playerID
HAVING avg(HR)>= 30
ORDER BY avg(HR) DESC"
sqldf(query)
library(devtools)
library(Lahman)
lirary
library(ggplot2)
library(sqldf)
colnames(Master)
query<--"SELECT weight
FROM Master"
sqldf(query)
query<-"SELECT weight
FROM Master"
result<-sqldf(query)
result
ggplot()+
geom_histogram(data=result,aes(x=weight))
ggplot()+
geom_histogram(data=result,aes(x=weight,color="blue"))
ggplot()+
geom_histogram(data=result,aes(x=weight,color="blue",fill="white"))
ggplot()+
geom_histogram(data=result,aes(x=weight,color="blue",fill="white",
bins=10))
ggplot()+
geom_histogram(data=result,aes(x=weight,color="blue",fill="white",
bins=10))
ggplot()+
geom_histogram(data=result,aes(x=weight,color="blue",fill="white",bins=10))
ggplot()+
geom_histogram(data=result,aes(x=weight,color="blue",fill="white",bins=50))
ggplot()+
geom_histogram(data=result,aes(x=weight),color="blue",fill="white",bins=50)
ggplot()+
geom_histogram(data=result,aes(x=weight),color="blue",fill="white",bins=10)
ggplot()+
geom_histogram(data=result,aes(x=weight),color="blue",fill="white",bins=50)
ggplot()+
geom_histogram(data=result,aes(x=weight),color="blue",fill="white",bins=50)+
ggtitle("Body-Weight of the fat baseball players")
query<-"SELECT yearID, HR
FROM Batting
WHERE playerID='ruthbar01'"
result<-sqldf(query)
result
result
query<-"SELECT yearID,HR
FROM Batting
WHERE playerID='ruthbar01'"
result<-sqldf(query)
result
library(Lahman)
library(sqldf)
query<-"SELECT yearID,HR
FROM Batting
WHERE playerID='ruthbar01'"
result<-sqldf(query)
result
query<-"SELECT yearID,HR
FROM Batting
WHERE playerID='ruthba01'"
result<-sqldf(query)
result
query<-"SELECT yearID,HR
FROM Batting
WHERE playerID='ruthba01'"
result<-sqldf(query)
ggplot()+
geom_point(data=result,aes(x=yearID,y=HR))+
geom_line(data=result,aes(x=yearID,y=HR))
ggplot()+
geom_point(data=result,aes(x=yearID,y=HR))+
geom_line(data=result,aes(x=yearID,y=HR))+
ggtitle("Frequency of high-magnitude earthquakes per year")
ggplot()+
geom_point(data=result,aes(x=yearID,y=HR))+
geom_line(data=result,aes(x=yearID,y=HR))+
ggtitle("Frequency of high-magnitude earthquakes per year")+
xlab("Year")+
ylab("Ammount per year")
class(standing)
standing<-c("junior","freshmen","junior","Sophmore","Senior")
standing
class(standing)
standing<-c("junior","freshmen","junior","Sophmore","Senior")
# class(standing) Allows you to check what variable is made up of... in this case characters
factor(standing)
standing<-c("junior","freshmen","junior","Sophmore","Senior")
# class(standing) Allows you to check what variable is made up of... in this case characters
#Store the standing back into itself as this new factor version
standing<-factor(standing)
standing
standing
install.packages("flexdashboard")
library(flexdashboard)
query<-"SELECT yearID, HR
FROM Teams
WHERE teamID='NYA'"
result<-sqldf(query)
library(sqldf)
query<-"SELECT yearID, HR
FROM Teams
WHERE teamID='NYA'"
result<-sqldf(query)
library(Lahman)
query<-"SELECT yearID, HR
FROM Teams
WHERE teamID='NYA'"
result<-sqldf(query)
result
library(ggplot2)
query<-"SELECT yearID, HR
FROM Teams
WHERE teamID='NYA'"
result<-sqldf(query)
#Time To VISUALIZE------------
ggplot()+
geom_point(data=result,aes(x=yearID,y=HR))
query<-"SELECT yearID, HR
FROM Teams
WHERE teamID='NYA'"
result<-sqldf(query)
#Time To VISUALIZE------------
ggplot()+
geom_point(data=result,aes(x=yearID,y=HR))+
geom_line(data=result,aes(x=yearID,y=HR))
ggplot()+
geom_line(data=result,aes(x=yearID,y=HR))
ggplot()+
geom_line(data=result,aes(x=yearID,y=HR))+
xlab("Year")+
ylab("Home Runs")
setwd("C:/Users/Owner/Desktop/website")
colnames(Lahman)
library(Lahman)
colnames(Batting)
colnames(Lahman)
Lahman
colname(LahmanData)
colnames(LahmanData)
colnames(Players)
colnames(playerInfo())
library(Lahman)
library(sqldf)
#This gives all the full data of all of Babe Ruth's Seasons with whole
#Names for his teams and himself
query<-"SELECT nameFirst,nameLast,name,Batting.yearID,Batting.HR
FROM (Batting INNER JOIN Master
On Batting.playerID=Master.playerID) INNER JOIN Teams
On Batting.teamID=Teams.teamID AND Batting.yearID=Teams.yearID
WHERE Batting.playerID ='ruthba01'"
sqldf(query)
#Finds all people ever with over 600 career homeruns and gives their full name
#and team name
query<-"SELECT nameFirst,nameLast,name,sum(Batting.HR),Batting.yearID
FROM (Batting INNER JOIN Master
On Batting.playerID=Master.playerID) INNER JOIN Teams
On Batting.teamID=Teams.teamID AND Batting.yearID=Teams.yearID
GROUP BY Batting.playerID
HAVING sum(Batting.HR)>= 600
ORDER BY sum(Batting.HR) DESC"
sqldf(query)
#Finds people with the average salary over 1 million and the name BOB
query<-"SELECT namefirst,nameLast, avg(salary)
FROM Salaries INNER JOIN Master
On Salaries.playerID=Master.playerID
WHERE nameFirst='Bob'
GROUP BY Salaries.playerID
HAVING avg(salary) > 1000000
ORDER BY avg(salary) DESC"
sqldf(query)
#Finds all people ever with over 600 career homeruns and gives their full name
#and team name
query<-"SELECT nameFirst,nameLast,name,sum(Batting.HR),Batting.yearID
FROM (Batting INNER JOIN Master
On Batting.playerID=Master.playerID) INNER JOIN Teams
On Batting.teamID=Teams.teamID AND Batting.yearID=Teams.yearID
GROUP BY Batting.playerID
HAVING sum(Batting.HR)>= 600
ORDER BY sum(Batting.HR) DESC"
sqldf(query)
query<-"SELECT playerID,name,Batting.yearID, Batting.HR
FROM Batting INNER JOIN Teams
On Batting.teamID=Teams.teamID and Batting.yearID=Teams.yearID
WHERE playerID='ruthba01'"
sqldf(query)
#Drew from two querries and replaced playerID with
#Real name
query<-"SELECT nameFirst, nameLast, teamID, yearID, HR
FROM Batting INNER JOIN Master
On Batting.playerID=Master.playerID
WHERE HR> 50
ORDER BY HR DESC"
sqldf(query)
#This is us testing how to draw from multiple index at one
#Time and combine responses from these
query<-"SELECT nameFirst, nameLast, teamID, yearID, HR
FROM Batting INNER JOIN Master
On Batting.playerID=Master.playerID
WHERE Batting.playerID='ruthba01'"
sqldf(query)
#Draw from two queries
setwd("C:/Users/Owner/Desktop/SchoolWork/Sophmore_Year/Fall 2017/Data_Science/Live_Sites/website")
